// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model College {
  id           String         @id @default(uuid())
  title        String
  image        String?
  description  String
  email        String
  phone        String
  location     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  state        State[]
  country      Country[]
  government   Government[]
  aided        Aided[]
  privatemnt      Privatemnt[]
  college_type College_Type[]
}

model State {
  id            String @id @default(uuid())
  name          String @unique
  descriptionst String

  College   College? @relation(fields: [collegeId], references: [id])
  collegeId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Country {
  id                 String   @id @default(uuid())
  namecountry        String   @unique
  descriptioncountry String
  College            College? @relation(fields: [collegeId], references: [id])
  collegeId          String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Government {
  id                    String   @id @default(uuid())
  namegovernment        String   @unique
  descriptiongovernment String
  College               College? @relation(fields: [collegeId], references: [id])
  collegeId             String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Aided {
  id               String   @id @default(uuid())
  nameaided        String   @unique
  descriptionaided String
  College          College? @relation(fields: [collegeId], references: [id])
  collegeId        String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Privatemnt {
  id                 String   @id @default(uuid())
  nameprivatemnt        String   @unique
  descriptionprivatemnt String
  College            College? @relation(fields: [collegeId], references: [id])
  collegeId          String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model College_Type {
  id            String   @id @default(uuid())
  name          String   @unique
  descriptionst String
  College       College? @relation(fields: [collegeId], references: [id])
  collegeId     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
